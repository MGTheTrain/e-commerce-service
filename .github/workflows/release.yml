name: Release

on:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Start external storage services
        run: docker-compose -f docker-compose.external.yml up -d --build

      - name: Test C#
        uses: MGTheTrain/public-github-actions/.github/actions/test-csharp-repository@main
        with:
          TEST_WORKING_DIRECTORY: ./backend/Mgtt.ECom/test
        env:
          AWS_ACCESS_KEY_ID: "test" 
          AWS_SECRET_ACCESS_KEY: "test"
          AWS_DEFAULT_REGION: "us-east-1"
          AWS_ENDPOINT_URL: "http://localhost:4566"
      
      - name: Test C#
        uses: MGTheTrain/public-github-actions/.github/actions/test-csharp-repository@main
        with:
          TEST_WORKING_DIRECTORY: ./backend/Mgtt.ECom/test

      - name: Test TypeScript
        uses: MGTheTrain/public-github-actions/.github/actions/test-ng-typescript-repository@main
        with:
          WORKING_DIRECTORY: ./frontend/e-commerce-service

      # - name: Initialize CodeQL
      #   uses: github/codeql-action/init@v3
      #   with:
      #     languages: 'csharp, javascript'

      # - name: Autobuild
      #   uses: github/codeql-action/autobuild@v3

      # - name: Perform CodeQL Analysis
      #   uses: github/codeql-action/analyze@v3
      #   with:
      #     languages: 'csharp, javascript'
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Read version from file
        id: get_version
        run: |
          # Check if the version file exists and read its content
          if [ -f version ]; then
            version=$(cat version)
            echo "VERSION=$version" >> $GITHUB_ENV
          else
            echo "Version file not found!"
            exit 1
          fi

      - name: Build and push Docker image for web backend
        run: |
          BACKEND_TAG="ecommerce-service-be:${{ env.VERSION }}"  
          docker build -t $BACKEND_TAG -f backend/Mgtt.ECom/src/Mgtt.ECom.Web/Dockerfile .
          docker push ${{ secrets.DOCKER_REPOSITORY }}/ecommerce-service-be:dev${{ github.run_number }}

      - name: Build and push Docker image for web frontend
        run: |
          FRONTEND_TAG="ecommerce-service-fe:${{ env.VERSION }}"
          docker build -t $FRONTEND_TAG -f frontend/e-commerce-service/Dockerfile .
          docker push ${{ secrets.DOCKER_REPOSITORY }}/ecommerce-service-fe:dev${{ github.run_number }}

  create-git-tags-from-version-file:
    runs-on: ubuntu-latest
    needs: [test]
    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create git tag from version file
        uses: MGTheTrain/public-github-actions/.github/actions/create-git-tag-from-version-file@main
        with:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}