{
  "openapi": "3.0.1",
  "info": {
    "title": "e-commerce-service",
    "description": "API documentation for the e-commerce-service",
    "termsOfService": "https://example.com/terms",
    "contact": {
      "name": "Marvin Gajek",
      "email": "placeholder@gmail.com"
    },
    "license": {
      "name": "MgTheTrain License",
      "url": "https://github.com/MGTheTrain/multi-media-management-service"
    },
    "version": "v1"
  },
  "paths": {
    "/api/v1/carts": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Creates a new shopping cart.",
        "requestBody": {
          "description": "The cart data transfer object containing user ID and total amount.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CartRequestDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CartRequestDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CartRequestDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created cart.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CartResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "If the cart data is invalid.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Cart"
        ],
        "summary": "Retrieves all carts.",
        "responses": {
          "200": {
            "description": "Returns a list of all carts.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CartResponseDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CartResponseDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CartResponseDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/carts/{cartId}": {
      "get": {
        "tags": [
          "Cart"
        ],
        "summary": "Gets a cart.",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "description": "The ID of the cart.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the cart with the specified ID.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CartResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "If the cart is not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Cart"
        ],
        "summary": "Updates an existing cart.",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "description": "The ID of the cart user.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The cart data transfer object containing the updated total amount.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CartRequestDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CartRequestDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CartRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CartResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "If the cart is not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "If the cart data is invalid.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "If the cart was successfully updated."
          }
        }
      },
      "delete": {
        "tags": [
          "Cart"
        ],
        "summary": "Deletes a cart.",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "description": "The ID of the cart.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "If the cart was successfully deleted."
          },
          "404": {
            "description": "If the cart is not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/carts/{cartId}/items": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Adds an item to a cart.",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "description": "The ID of the cart to add the item to.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The cart item data transfer object containing product ID, quantity, and price.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CartItemRequestDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CartItemRequestDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CartItemRequestDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created cart item.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CartItemResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartItemResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartItemResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "If the cart item data is invalid.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Cart"
        ],
        "summary": "Gets all items in a cart.",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "description": "The ID of the cart to get items from.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the list of cart items.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CartItemResponseDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CartItemResponseDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CartItemResponseDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/carts/{cartId}/items/{itemId}": {
      "get": {
        "tags": [
          "Cart"
        ],
        "summary": "Gets a specific item in a cart.",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "description": "The ID of the cart.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "The ID of the cart item.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the cart item with the specified ID.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CartItemResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartItemResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartItemResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "If the cart item is not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Cart"
        ],
        "summary": "Updates an item in a cart.",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "description": "The ID of the cart.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "The ID of the cart item to update.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The cart item data transfer object containing updated product ID, quantity, and price.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CartItemRequestDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CartItemRequestDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CartItemRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CartItemResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartItemResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartItemResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "If the cart item is not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "If the cart item data is invalid.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "If the cart item was successfully updated."
          }
        }
      },
      "delete": {
        "tags": [
          "Cart"
        ],
        "summary": "Deletes an item from a cart.",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "description": "The ID of the cart.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "The ID of the cart item to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "If the cart item was successfully deleted."
          },
          "404": {
            "description": "If the cart item is not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/categories": {
      "post": {
        "tags": [
          "Category"
        ],
        "summary": "Creates a new category.",
        "requestBody": {
          "description": "The category data transfer object containing category details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequestDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequestDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequestDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created category.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "If the category data is invalid.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Retrieves all categories.",
        "responses": {
          "200": {
            "description": "Returns a list of all categories.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryResponseDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryResponseDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryResponseDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/categories/{categoryId}": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Retrieves a category by its ID.",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "The ID of the category.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the category with the specified ID.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "If the category is not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Category"
        ],
        "summary": "Updates an existing category.",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "The ID of the category to update.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The category data transfer object containing updated category details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequestDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequestDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "If the category is not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "If the category data is invalid.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "If the category was successfully updated."
          }
        }
      },
      "delete": {
        "tags": [
          "Category"
        ],
        "summary": "Deletes a category by its ID.",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "The ID of the category to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "If the category was successfully deleted."
          },
          "404": {
            "description": "If the category is not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders": {
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "Creates a new order.",
        "requestBody": {
          "description": "The order data transfer object containing order details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created order.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "If the order data is invalid.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Retrieves all orders.",
        "responses": {
          "200": {
            "description": "Returns a list of all orders.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderResponseDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderResponseDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderResponseDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{orderId}": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Retrieves an order by its ID.",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "The ID of the order.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the order with the specified ID.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "If the order is not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Order"
        ],
        "summary": "Updates an existing order.",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "The ID of the order to update.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The order data transfer object containing updated order details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrderRequestDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderRequestDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderRequestDTO"
                }
              }
            }
          },
          "404": {
            "description": "If the order is not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "If the order data is invalid.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "If the order was successfully updated."
          }
        }
      },
      "delete": {
        "tags": [
          "Order"
        ],
        "summary": "Deletes an order by its ID.",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "The ID of the order to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "If the order was successfully deleted."
          },
          "404": {
            "description": "If the order is not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{orderId}/items": {
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "Creates a new order item within an order.",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "The ID of the order to which the item belongs.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The order item data transfer object containing item details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderItemRequestDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderItemRequestDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderItemRequestDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created order item.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrderItemResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderItemResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderItemResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "If the order item data is invalid.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Retrieves all order items belonging to a specific order.",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "The ID of the order.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of all order items within the specified order.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderItemResponseDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderItemResponseDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderItemResponseDTO"
                  }
                }
              }
            }
          },
          "404": {
            "description": "If the order items are not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{orderId}/items/{itemId}": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Retrieves an order item by its ID within a specific order.",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "The ID of the order.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "The ID of the order item.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the order item with the specified ID within the specified order.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrderItemResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderItemResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderItemResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "If the order item is not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Order"
        ],
        "summary": "Updates an existing order item within a specific order.",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "The ID of the order to which the item belongs.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "The ID of the order item to update.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The order item data transfer object containing updated item details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderItemRequestDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderItemRequestDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderItemRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrderItemResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderItemResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderItemResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "If the order item is not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "If the order item data is invalid.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "If the order item was successfully updated."
          }
        }
      },
      "delete": {
        "tags": [
          "Order"
        ],
        "summary": "Deletes an order item within a specific order by its ID.",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "The ID of the order to which the item belongs.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "The ID of the order item to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "If the order item was successfully deleted."
          },
          "404": {
            "description": "If the order item is not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Creates a new product.",
        "requestBody": {
          "description": "The product data transfer object containing product details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductRequestDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductRequestDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductRequestDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created product.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "If the product data is invalid.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Retrieves all products.",
        "responses": {
          "200": {
            "description": "Returns a list of all products.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductResponseDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductResponseDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductResponseDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products/{productId}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Retrieves a product by its ID.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "The ID of the product.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the product with the specified ID.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "If the product is not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Updates an existing product.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "The ID of the product to update.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The product data transfer object containing updated product details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductRequestDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductRequestDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "If the product is not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "If the product data is invalid.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "If the product was successfully updated."
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Deletes a product by its ID.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "The ID of the product to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "If the product was successfully deleted."
          },
          "404": {
            "description": "If the product is not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reviews": {
      "post": {
        "tags": [
          "Review"
        ],
        "summary": "Creates a new review.",
        "requestBody": {
          "description": "The review data transfer object containing review details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewRequestDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewRequestDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewRequestDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created review.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "If the review data is invalid.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Review"
        ],
        "summary": "Retrieves all reviews.",
        "responses": {
          "200": {
            "description": "Returns a list of all reviews.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReviewResponseDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReviewResponseDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReviewResponseDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reviews/{reviewId}": {
      "get": {
        "tags": [
          "Review"
        ],
        "summary": "Retrieves a review by its ID.",
        "parameters": [
          {
            "name": "reviewId",
            "in": "path",
            "description": "The ID of the review.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the review with the specified ID.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "If the review is not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Review"
        ],
        "summary": "Updates an existing review.",
        "parameters": [
          {
            "name": "reviewId",
            "in": "path",
            "description": "The ID of the review to update.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The review data transfer object containing updated review details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewRequestDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewRequestDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "If the review is not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "If the review data is invalid.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "If the review was successfully updated."
          }
        }
      },
      "delete": {
        "tags": [
          "Review"
        ],
        "summary": "Deletes a review by its ID.",
        "parameters": [
          {
            "name": "reviewId",
            "in": "path",
            "description": "The ID of the review to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "If the review was successfully deleted."
          },
          "404": {
            "description": "If the review is not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reviews/product/{productId}": {
      "get": {
        "tags": [
          "Review"
        ],
        "summary": "Retrieves reviews by product ID.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "The ID of the product.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of reviews for the specified product.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReviewResponseDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReviewResponseDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReviewResponseDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reviews/user/{userId}": {
      "get": {
        "tags": [
          "Review"
        ],
        "summary": "Retrieves reviews by user ID.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The ID of the user.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of reviews by the specified user.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReviewResponseDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReviewResponseDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReviewResponseDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/register": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Registers a new user.",
        "requestBody": {
          "description": "The user data transfer object containing user details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequestDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequestDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequestDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created user.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "If the user data is invalid.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Retrieves a user by their ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the user with the specified ID.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "If the user is not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Updates an existing user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user to update.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The user data transfer object containing updated user details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequestDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequestDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "If the user is not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "If the user data is invalid.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "If the user was successfully updated."
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Deletes a user by their ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "If the user was successfully deleted."
          },
          "404": {
            "description": "If the user is not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Retrieves all users.",
        "responses": {
          "200": {
            "description": "Returns a list of all users.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponseDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponseDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponseDTO"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CartItemRequestDTO": {
        "required": [
          "cartID",
          "price",
          "productID",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "cartID": {
            "type": "string",
            "format": "uuid"
          },
          "productID": {
            "type": "string",
            "format": "uuid"
          },
          "quantity": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "minimum": 0.01,
            "type": "number",
            "format": "float"
          }
        },
        "additionalProperties": false
      },
      "CartItemResponseDTO": {
        "type": "object",
        "properties": {
          "cartItemID": {
            "type": "string",
            "format": "uuid"
          },
          "cartID": {
            "type": "string",
            "format": "uuid"
          },
          "productID": {
            "type": "string",
            "format": "uuid"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "format": "float"
          }
        },
        "additionalProperties": false
      },
      "CartRequestDTO": {
        "required": [
          "totalAmount",
          "userID"
        ],
        "type": "object",
        "properties": {
          "userID": {
            "type": "string",
            "format": "uuid"
          },
          "totalAmount": {
            "minimum": 0,
            "type": "number",
            "format": "float"
          }
        },
        "additionalProperties": false
      },
      "CartResponseDTO": {
        "type": "object",
        "properties": {
          "cartID": {
            "type": "string",
            "format": "uuid"
          },
          "userID": {
            "type": "string",
            "format": "uuid"
          },
          "totalAmount": {
            "type": "number",
            "format": "float"
          }
        },
        "additionalProperties": false
      },
      "CategoryRequestDTO": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CategoryResponseDTO": {
        "type": "object",
        "properties": {
          "categoryID": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderItemRequestDTO": {
        "required": [
          "orderID",
          "price",
          "productID",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "orderID": {
            "type": "string",
            "format": "uuid"
          },
          "productID": {
            "type": "string",
            "format": "uuid"
          },
          "quantity": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "minimum": 0.01,
            "type": "number",
            "format": "float"
          }
        },
        "additionalProperties": false
      },
      "OrderItemResponseDTO": {
        "type": "object",
        "properties": {
          "orderItemID": {
            "type": "string",
            "format": "uuid"
          },
          "orderID": {
            "type": "string",
            "format": "uuid"
          },
          "productID": {
            "type": "string",
            "format": "uuid"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "format": "float"
          }
        },
        "additionalProperties": false
      },
      "OrderRequestDTO": {
        "required": [
          "orderDate",
          "orderStatus",
          "totalAmount",
          "userID"
        ],
        "type": "object",
        "properties": {
          "userID": {
            "type": "string",
            "format": "uuid"
          },
          "orderDate": {
            "type": "string",
            "format": "date-time"
          },
          "totalAmount": {
            "minimum": 0.01,
            "type": "number",
            "format": "float"
          },
          "orderStatus": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "OrderResponseDTO": {
        "type": "object",
        "properties": {
          "orderID": {
            "type": "string",
            "format": "uuid"
          },
          "userID": {
            "type": "string",
            "format": "uuid"
          },
          "orderDate": {
            "type": "string",
            "format": "date-time"
          },
          "totalAmount": {
            "type": "number",
            "format": "float"
          },
          "orderStatus": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "ProductRequestDTO": {
        "required": [
          "categoryID",
          "imageUrl",
          "name",
          "price",
          "stock"
        ],
        "type": "object",
        "properties": {
          "categoryID": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "minimum": 0.01,
            "type": "number",
            "format": "float"
          },
          "stock": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "imageUrl": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ProductResponseDTO": {
        "type": "object",
        "properties": {
          "productID": {
            "type": "string",
            "format": "uuid"
          },
          "categoryID": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "float"
          },
          "stock": {
            "type": "integer",
            "format": "int32"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReviewRequestDTO": {
        "required": [
          "productID",
          "rating",
          "userID"
        ],
        "type": "object",
        "properties": {
          "productID": {
            "type": "string",
            "format": "uuid"
          },
          "userID": {
            "type": "string",
            "format": "uuid"
          },
          "rating": {
            "maximum": 5,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "comment": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReviewResponseDTO": {
        "type": "object",
        "properties": {
          "reviewID": {
            "type": "string",
            "format": "uuid"
          },
          "productID": {
            "type": "string",
            "format": "uuid"
          },
          "userID": {
            "type": "string",
            "format": "uuid"
          },
          "rating": {
            "type": "integer",
            "format": "int32"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "reviewDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "UserRequestDTO": {
        "required": [
          "email",
          "password",
          "role",
          "userName"
        ],
        "type": "object",
        "properties": {
          "userName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "role": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UserResponseDTO": {
        "type": "object",
        "properties": {
          "userID": {
            "type": "string",
            "format": "uuid"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Add JWT with Bearer here",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}